q1
public static final int XXX = 12345;

q2
private atribute are NOT visible from subclass

q3
final method is not overriden

q4
String[] array = {"a", "b"};
String.join("", array) //JAVA8
ou
StringBuffer sb = new StringBuffer();	
for (String string : array) {
  sb.append(string);
}

q5
Java class can NOT have multiples parents

q6
abstractions should not depend upon details

q7
Throw new Exception()

q8
A a = new A();
A b = new B(); //ok when extends

q9
Aways use access specifiers

q10
int i = 0;
System.out.println(i++); //0

q11
Garbage collector ensures that there are enough memory to run  a java program
NO

q12
System.out.println(PLANET.MERCURY == PLANET.VENUS); //false
System.out.println(PLANET.MERCURY == PLANET.MERCURY); //true
System.out.println(PLANET.MERCURY.equals(PLANET.MERCURY)); //true

q13
Interfaces can extends multiples Interfaces

q14
Interfaces can have implemented methods //JAVA8

q15
If two objects are equals then they should have the same hashcode
NO

q16
2 >> 1 = 1 //010 -> 001 = 1

q17
primitives
YES = int, float
NO = uint, bool

q18
if(i==1 || j==1 || (i+j) == 1)

q19
Singleton...

q20
interface Animable { method(); }

q21
Binary search in java

q22
StringBuilder



package com.williansmartins.manutencaoveiculo.teste;

public class Metodos {
	public static void main(String[] args) {
		metodo2();
	}

	private static void metodo1() {
		int[] a = { 1, 2, 3, 4, 5, 6 };
		int[] b = { 2, 4, 6 };
		int[] c = new int[10];

		int j = 0;
		String sb = new String();

		for (int i = 0; i < a.length; i++) {
			if (a[i] == b[j]) {
//				c[i] = a[i];
				sb += a[i];
				j++;
			}
		}

//		sb.sl

		System.out.println(sb);

//		System.out.println(Arrays.toString(c));

//		for (int i = 0; i < c.length; i++) {
//			System.out.println(c[i]);
//		}
	}

	static void metodo2() {
		int arrayB[] = new int[] { 1, 2, 3, 4, 5, 6, 7, 8 };
		int arrayA[] = new int[] { 2, 4, 6, 8 };

		// criar o array com menor tamanho
		int arrayC[] = (arrayA.length < arrayB.length) ? arrayA : arrayB;

		// rodar um loop ateh encontrar a interseccao
		int a = 0, b = 0, c = 0;
		while (a < arrayA.length && b < arrayB.length) {
			if (arrayA[a] < arrayB[b]) {
				a++;
			} else if (arrayA[a] > arrayB[b]) {
				b++;
			} else {
				arrayC[c] = arrayA[a];
				a++;
				b++;
				c++;
			}
		}
		
		for(int l=0;l<arrayC.length;l++) {
	        System.out.println(arrayC[l]);
	    }

	}
}

=================
20 segundos fazer calculo de bitwise...
Garbage collector ensures that there are enough memory to run  a java program
questao 19- o que era aquilo?
